<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        
        <!-- 获得*.properties配置文件的信息 -->
        <bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
           <property name="ignoreUnresolvablePlaceholders" value="true" /> 
           <property name="locations">
	           	<list>
	           		<value>classpath*:config/jdbc.properties</value>
	           	</list>
           </property>
        </bean>
        
       <!-- 数据源 --> 
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"  destroy-method="close">
	        <property name="driverClassName" value="${driver}" />  
	        <property name="url" value="${url}" />  
	        <property name="username" value="${username}" />  
	        <property name="password" value="${password}" /> 
       </bean>
       
     <!--   mybatis文件配置，扫描所有mapper文件-->
      <bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean"
       p:dataSource-ref="dataSource" 
       p:configLocation="classpath:config/mybaits-config.xml" 
       p:mapperLocations="classpath*:mapper/*.xml">
       		<property name="plugins">
			<bean class="com.pkx.common.MybatisPageInterceptor"></bean>
			</property>
       </bean>
       <!-- configLocation为mybatis属性 mapperLocations为所有mapper -->
      
      <!--   spring与mybatis整合配置，扫描所有dao--> 
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="com.pkx.module.dao"
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
        
      <!-- 配置SqlSessionFactoryBean -->
      <!-- 
        2. mybatis 的sqlSession的工厂SqlSessionFactory
            dataSource: 数据源
            typeAliasesPackage:指定实体类的包名,自动将包名下得实体类映射为简单的类名-->
     
   <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.pkx.module.entity"></property>
    </bean> -->
    <!-- 
    3. mybatis自动扫描加载Sql映射文件/接口：MapperScannerConfigurer
    basePackage:指定sql映射文件/接口所在的包,自动扫描(这儿需要注意BindException，如果出现，请看 mybatis异常收集篇)
    sqlSessionFactory:引用上面定义好得sqlSessionFactory
   
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="classpath:resources/mapper/*.xml" />
       <property name="sqlSessionFactoryBeanName"  value="sqlSessionFactory"/>
     </bean>
  -->
</beans>
